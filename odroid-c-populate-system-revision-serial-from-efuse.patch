From 91917f8a2ddd9043a1376359bbdff8ff3eeccf72 Mon Sep 17 00:00:00 2001
From: Scott K Logan <logans@cottsay.net>
Date: Mon, 7 Dec 2015 04:59:01 -0800
Subject: [PATCH] ODROID-C: Populate system revision/serial from efuse

It would be nice to do this earlier, but right as the efuse system
initializes is the easiest spot.

Since the serial is all hex, we'll drop the leading HKC1.

Since the revision can only be 8 bytes, we'll just grab the last 4
characters of that value;
---
 drivers/amlogic/efuse/efuse.c | 70 +++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 70 insertions(+)

diff --git a/drivers/amlogic/efuse/efuse.c b/drivers/amlogic/efuse/efuse.c
index 2a1d547..9167cec 100644
--- a/drivers/amlogic/efuse/efuse.c
+++ b/drivers/amlogic/efuse/efuse.c
@@ -18,6 +18,7 @@
 #include <linux/slab.h>
 #include <linux/delay.h>
 #include <asm/uaccess.h>
+#include <asm/system_info.h>
 #include <linux/platform_device.h>
 #include <mach/am_regs.h>
 #include <plat/io.h>
@@ -353,6 +354,69 @@ static ssize_t usid_show(struct class *cla, struct class_attribute *attr, char *
 
         return sprintf(buf, "%s\n",usid);
 }
+
+static int aml_efuse_get_system_revision(unsigned int *system_rev)
+{
+	char sysrev[11] = {0};
+	efuseinfo_item_t info;
+
+	if (efuse_getinfo_byID(EFUSE_USID_ID, &info) < 0){
+		printk(KERN_WARNING "efuse: USID is not found\n");
+		return -EFAULT;
+	}
+
+	if (info.data_len < 10){
+		printk(KERN_WARNING "efuse: USID is not big enough to hold system revision\n");
+		return -EFAULT;
+	}
+
+	if (efuse_read_item(sysrev, 10, (loff_t*)&info.offset) < 0){
+		printk(KERN_WARNING "efuse: Failed to read USID\n");
+		return -EFAULT;
+	}
+
+	if (sscanf(sysrev, "HKC13C%4x", system_rev) != 1){
+		printk(KERN_WARNING "efuse: USID is not a valid system revision\n");
+		return -EFAULT;
+	}
+
+	return 0;
+}
+
+static int aml_efuse_get_system_serial(unsigned int *system_serial_high, unsigned int *system_serial_low)
+{
+	char sysser[17] = {0};
+	efuseinfo_item_t info;
+
+	if (efuse_getinfo_byID(EFUSE_NANDEXTCMD_ID, &info) < 0){
+		printk(KERN_WARNING "efuse: NANDEXTCMD is not found\n");
+		return -EFAULT;
+	}
+
+	if (info.data_len < 16){
+		printk(KERN_WARNING "efuse: NANDEXTCMD is not big enough to hold system serial\n");
+		return -EFAULT;
+	}
+
+	if (efuse_read_item(sysser, 16, (loff_t*)&info.offset) < 0){
+		printk(KERN_WARNING "efuse: Failed to read NANDEXTCMD\n");
+		return -EFAULT;
+	}
+
+	if (sscanf(&sysser[8], "%8X", system_serial_low) != 1){
+		printk(KERN_WARNING "efuse: NANDEXTCMD does not have a valid low system serial\n");
+		return -EFAULT;
+	}
+
+	sysser[8] = '\0';
+
+	if (sscanf(sysser, "HKC1%4X", system_serial_high) != 1){
+		printk(KERN_WARNING "efuse: NANDEXTCMD does not have a valid high system serial\n");
+		return -EFAULT;
+	}
+
+	return 0;
+}
 #endif
 
 static int efuse_device_match(struct device *dev, const void *data)
@@ -616,6 +680,12 @@ int usid_min,usid_max;
 			CNTL1_PD_ENABLE_BIT, CNTL1_PD_ENABLE_SIZE);
 #endif		
 #endif
+
+#if defined(CONFIG_MACH_MESON8B_ODROIDC)
+	 aml_efuse_get_system_revision(&system_rev);
+	 aml_efuse_get_system_serial(&system_serial_high, &system_serial_low);
+	 printk(KERN_INFO "efuse: system_rev is %04x, system_serial is %08x%08x\n", system_rev, system_serial_high, system_serial_low);
+#endif
 	 return 0;
 
  error4:
-- 
2.9.5

